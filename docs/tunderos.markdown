# Документация для TunderOS

## Обзор
TunderOS — это экспериментальная операционная система, реализованная на Python, с файловой системой (`TNFS`), менеджером пользователей, SELinux-подобной системой контроля доступа и интерактивной оболочкой. Система предназначена для обучения и исследования принципов работы ОС.

## Архитектура
TunderOS состоит из следующих компонентов:
- **Файловая система (`TNFS`)**: Хранит файлы и директории в SQLite базе данных.
- **Менеджер пользователей (`UserManager`)**: Управляет пользователями и сессиями.
- **SELinux**: Реализует контроль доступа на основе ролей.
- **Ядро (`Kernel`)**: Координирует взаимодействие компонентов.
- **Оболочка (`Shell`)**: Интерактивный интерфейс для выполнения команд.
- **Логирование (`Logger`)**: Записывает операции в файлы и консоль.
- **Обработка ошибок (`CrashHandler`)**: Управляет ошибками и создает crash-дампы.

### Структура директорий
```
TunderOS
├── data
│   ├── crash        # Crash-дампы
│   └── logs         # Логи
├── docs             # Документация
├── scripts          # Скрипты
├── src
│   ├── core         # Ядро и менеджер пользователей
│   ├── dev          # Экспериментальные модули
│   ├── libs         # Утилиты (Logger, CrashHandler)
│   ├── network      # Сетевые функции
│   ├── security     # SELinux
│   ├── shell        # Оболочка
│   ├── TNFS         # Файловая система
│   └── utils        # Дополнительные утилиты
└── tests            # Тесты
```

## Установка
1. Установите Python 3.8+.
2. Установите зависимости:
   ```bash
   pip install prompt_toolkit colorama cryptography
   ```
3. Запустите:
   ```bash
   python start.py --debug
   ```

## Использование
1. Запустите TunderOS:
   ```bash
   python start.py --mode permissive
   ```
2. Используйте команды в оболочке, например:
   ```bash
   ls
   L.mktxt /home/user/test.txt
   cat /home/user/test.txt
   ```

## Основные компоненты

### Файловая система (`TNFS`)
- Хранит файлы и директории в `data/tnfs.db`.
- Поддерживает стандартные операции: создание, удаление, переименование, копирование, изменение прав.
- Проверяет права доступа через `chmod` и SELinux.

### Менеджер пользователей (`UserManager`)
- Управляет пользователями и сессиями в `data/users.db`.
- Поддерживает вход, выход, добавление/удаление пользователей, смену паролей.

### SELinux
- Реализует контроль доступа на основе ролей.
- Политики хранятся в `data/selinux_policies.json`.
- Аудит операций в `data/selinux.db`.

### Ядро (`Kernel`)
- Координирует взаимодействие компонентов.
- Предоставляет API для операций с файлами и пользователями.

### Оболочка (`Shell`)
- Поддерживает команды: `ls`, `cat`, `L.mktxt`, `L.chmod`, `login`, `who`, и т.д.
- Использует `prompt_toolkit` для цветного вывода и привязок клавиш.

### Логирование и обработка ошибок
- Логи в `data/logs/{name}.log` (JSON).
- Crash-дампы в `data/crash/{timestamp}.json`.

## Ограничения
- Пароли хранятся в открытом виде.
- Ограниченная поддержка шаблонов в SELinux.
- Некоторые команды (`L.rename`, `L.copy`, `L.move`) помечены как `!!!DEV!!!`.

## Рекомендации по улучшению
1. **Безопасность**:
   - Внедрить хеширование паролей в `UserManager`.
   - Добавить проверку сложности паролей.
2. **SELinux**:
   - Поддержать шаблоны путей (`/home/*`).
   - Реализовать очистку старых записей аудита.
3. **Файловая система**:
   - Исправить права доступа для `/` (`0o755`).
   - Добавить кэширование метаданных.
4. **Оболочка**:
   - Добавить автодополнение команд.
   - Исправить пометки `!!!ERROR!!!` и `!!!DEV!!!`.
5. **Тестирование**:
   - Написать тесты для всех модулей в `tests/`.
   - Пример теста для `shell.py`:
     ```python
     def test_shell_ls(capsys):
         shell = Shell(...)
         shell._execute("ls")
         captured = capsys.readouterr()
         assert "home" in captured.out
     ```

## Тестирование
- Создайте тесты в `tests/` с использованием `pytest`.
- Пример:
  ```bash
  pytest tests/test_shell.py
  ```

## Документация
- Документация для каждого модуля находится в `docs/{module}.md`.
- Обновляйте документацию при изменении кода.

## Лицензия
TunderOS распространяется под лицензией MIT (уточните у автора).

## Контакты
- Автор: SKATT
- Дополнительная информация: Antarctica (для SELinux)